service: servicio-vuelos

provider:
  name: aws
  runtime: python3.9
  region: us-east-1
  stage: ${opt:stage, 'dev'}
  environment:
    tabla_usuarios: ${self:service}-${self:provider.stage}-usuario
    t_tokens_acceso: ${self:service}-${self:provider.stage}-tokens
  iam:
    role: arn:aws:iam::078729045663:role/LabRole

functions:
  crearUsuario:
    handler: Lambda_CrearUsuario.lambda_handler
    events:
      - http:
          path: /usuarios/crear
          method: post
          cors: true

  loginUsuario:
    handler: Lambda_LoginUsuario.lambda_handler
    events:
      - http:
          path: /usuarios/login
          method: post
          cors: true

  validarToken:
    handler: Lambda_ValidarTokenAcceso.lambda_handler
    events:
      - http:
          path: /usuarios/token/validar
          method: post
          cors: true

resources:
  Resources:
    usuariosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.tabla_usuarios}
        AttributeDefinitions:
          - AttributeName: user_id 
            AttributeType: S
          - AttributeName: nombre
            AttributeType: S   # Usado para el GSI
          - AttributeName: apellido
            AttributeType: S   # Usado para el GSI (no clave principal, pero parte del GSI)
        KeySchema:
          - AttributeName: user_id 
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

        # √çndice Secundario Global (GSI)
        GlobalSecondaryIndexes:
          - IndexName: UsuarioIndex
            KeySchema:
              - AttributeName: nombre 
                KeyType: HASH
              - AttributeName: apellido
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
    # Tabla Tokens de Acceso
    TokensTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.t_tokens_acceso}
        AttributeDefinitions:
          - AttributeName: token
            AttributeType: S
        KeySchema:
          - AttributeName: token
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

  Outputs:
  ValidarTokenLambdaARN:
    Value: { "Fn::GetAtt": ["validarToken", "Arn"] }
    Export:
      Name: ValidarTokenLambdaARN


